{
  "GET /": {
    "success": true,
    "status_code": 200,
    "response_time_ms": 1,
    "content_type": "application/json",
    "response": {
      "server": "Ocular Agents - All Services",
      "description": "MCP server providing penetration testing and network discovery tools",
      "version": "1.0",
      "endpoints": {
        "/": "This information page",
        "/services": "List all available services",
        "/ping": "Network connectivity testing",
        "/curl": "HTTP request testing",
        "/datetime": "Date and time information",
        "/dns": "DNS record lookups",
        "/enum4linux": "SMB/CIFS enumeration",
        "/whois": "Domain registration information",
        "/wpscan": "WordPress security scanning",
        "/httpx": "HTTP/HTTPS service discovery",
        "/nbtscan": "NetBIOS name scanning",
        "/health": "Health check"
      },
      "documentation": "See /services for detailed parameter information"
    }
  },
  "GET /health": {
    "success": true,
    "status_code": 200,
    "response_time_ms": 1,
    "content_type": "text/plain; charset=utf-8",
    "response": "OK"
  },
  "GET /services": {
    "success": true,
    "status_code": 200,
    "response_time_ms": 0,
    "content_type": "application/json",
    "response": {
      "server": "Ocular Agents - All Services",
      "version": "1.0",
      "services": [
        {
          "name": "ping",
          "endpoint": "/ping",
          "description": "Network connectivity testing using ICMP ping",
          "methods": [
            "GET",
            "POST"
          ],
          "parameters": {
            "host": "Target hostname or IP address (required)",
            "count": "Number of ping packets (1-99, default: 5)",
            "interval": "Interval between packets (0.01-5.0, default: 1.0)",
            "packet_size": "Size of data bytes (1-65524, default: 56)"
          }
        },
        {
          "name": "curl",
          "endpoint": "/curl",
          "description": "HTTP requests for web application testing",
          "methods": [
            "GET",
            "POST"
          ],
          "parameters": {
            "url": "Target URL (required)",
            "method": "HTTP method (default: GET)",
            "headers": "Custom headers (semicolon-separated)",
            "data": "POST data",
            "follow_redirects": "Follow HTTP redirects (boolean)",
            "verbose": "Enable verbose output (boolean)",
            "insecure": "Allow insecure SSL (boolean)",
            "user_agent": "Custom User-Agent string",
            "headers_only": "Get headers only (boolean)"
          }
        },
        {
          "name": "datetime",
          "endpoint": "/datetime",
          "description": "Get current date and time with various formats",
          "methods": [
            "GET",
            "POST"
          ],
          "parameters": {
            "timezone": "Timezone to convert to (optional)",
            "format": "Custom strftime format string (optional)",
            "utc": "Return UTC time (boolean, default: false)"
          }
        },
        {
          "name": "dns",
          "endpoint": "/dns",
          "description": "DNS record lookups and domain analysis",
          "methods": [
            "GET",
            "POST"
          ],
          "parameters": {
            "host": "Hostname or domain to look up (required)",
            "record_types": "Comma-separated DNS record types (default: A,TXT)",
            "timeout": "DNS query timeout in seconds (1-30, default: 5)"
          }
        },
        {
          "name": "enum4linux",
          "endpoint": "/enum4linux",
          "description": "SMB/CIFS enumeration using enum4linux tool",
          "methods": [
            "GET",
            "POST"
          ],
          "parameters": {
            "target": "Target hostname or IP address (required)",
            "options": "Enumeration options (default: -a for all)",
            "username": "Username for authentication (optional)",
            "password": "Password for authentication (optional)",
            "timeout": "Command timeout in seconds (30-600, default: 120)"
          }
        },
        {
          "name": "whois",
          "endpoint": "/whois",
          "description": "WHOIS domain registration information lookup",
          "methods": [
            "GET",
            "POST"
          ],
          "parameters": {
            "domain": "Domain name to lookup (required, e.g., example.com)",
            "options": "WHOIS options (optional, e.g., -R, -a, -t, -H)",
            "server": "Specific WHOIS server to query (optional)",
            "timeout": "Command timeout in seconds (10-120, default: 30)"
          }
        },
        {
          "name": "wpscan",
          "endpoint": "/wpscan",
          "description": "WordPress security scanner using WPScan",
          "methods": [
            "GET",
            "POST"
          ],
          "parameters": {
            "url": "Target WordPress URL (required, include http:// or https://)",
            "options": "Scan type: basic, plugins, themes, users, vulns, full, passive (default: basic)",
            "api_token": "WordPress vulnerability database API token (optional)",
            "timeout": "Command timeout in seconds (60-1800, default: 300)",
            "force": "Force scan even if WordPress not detected (boolean)",
            "random_user_agent": "Use random user agent (boolean)"
          }
        },
        {
          "name": "httpx",
          "endpoint": "/httpx",
          "description": "Fast HTTP/HTTPS service discovery and analysis",
          "methods": [
            "GET",
            "POST"
          ],
          "parameters": {
            "targets": "Target hosts/URLs to probe (required, comma-separated for multiple)",
            "options": "Scan type: basic, detailed, headers, hashes, comprehensive (default: basic)",
            "ports": "Ports to probe (comma-separated, default: 80,443,8080,8443)",
            "paths": "Paths to test (comma-separated, optional)",
            "method": "HTTP method to use (default: GET)",
            "timeout": "Request timeout in seconds (5-120, default: 10)",
            "threads": "Number of threads (1-100, default: 50)",
            "rate_limit": "Requests per second limit (1-1000, default: 150)",
            "retries": "Number of retries (0-5, default: 2)"
          }
        },
        {
          "name": "nbtscan",
          "endpoint": "/nbtscan",
          "description": "NetBIOS name scanner for Windows network discovery",
          "methods": [
            "GET",
            "POST"
          ],
          "parameters": {
            "target": "IP address, range, or subnet to scan (required)",
            "options": "Scan options: basic, verbose, script, hosts, lmhosts (default: basic)",
            "timeout": "Response timeout in milliseconds (100-30000, default: 1000)",
            "verbose": "Enable verbose output (boolean)",
            "retransmits": "Number of retransmits (0-10, default: 0)",
            "use_local_port": "Use local port 137 for scans (boolean, requires root)"
          }
        }
      ]
    }
  },
  "ping_GET request to localhost": {
    "success": true,
    "status_code": 200,
    "response_time_ms": 2091,
    "content_type": "application/json",
    "response": {
      "service": "ping",
      "process_time_ms": 2088,
      "target": "127.0.0.1",
      "arguments": {
        "count": 3,
        "interval": 1.0,
        "packet_size": 56
      },
      "return_code": 0,
      "raw_output": "PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.\n64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.047 ms\n64 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=0.091 ms\n64 bytes from 127.0.0.1: icmp_seq=3 ttl=64 time=0.095 ms\n\n--- 127.0.0.1 ping statistics ---\n3 packets transmitted, 3 received, 0% packet loss, time 2080ms\nrtt min/avg/max/mdev = 0.047/0.077/0.095/0.021 ms\n",
      "raw_error": "",
      "structured_output": {
        "bytes": 56,
        "from": "127.0.0.1",
        "ttl": 64,
        "packets": [
          {
            "sequence": 1,
            "time_ms": 0.047,
            "status": "success"
          },
          {
            "sequence": 2,
            "time_ms": 0.091,
            "status": "success"
          },
          {
            "sequence": 3,
            "time_ms": 0.095,
            "status": "success"
          }
        ],
        "errors": [],
        "statistics": {
          "packets_transmitted": 3,
          "packets_received": 3,
          "packet_loss_percent": 0.0,
          "time_ms": 2080,
          "errors": 0,
          "rtt": {
            "min": 0.047,
            "avg": 0.077,
            "max": 0.095,
            "mdev": 0.021
          }
        }
      }
    }
  },
  "ping_POST request to Google DNS": {
    "success": true,
    "status_code": 200,
    "response_time_ms": 1014,
    "content_type": "application/json",
    "response": {
      "service": "ping",
      "process_time_ms": 1012,
      "target": "8.8.8.8",
      "arguments": {
        "count": 2,
        "interval": 1.0,
        "packet_size": 56
      },
      "return_code": 0,
      "raw_output": "PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.\n64 bytes from 8.8.8.8: icmp_seq=1 ttl=117 time=6.52 ms\n64 bytes from 8.8.8.8: icmp_seq=2 ttl=117 time=6.54 ms\n\n--- 8.8.8.8 ping statistics ---\n2 packets transmitted, 2 received, 0% packet loss, time 1002ms\nrtt min/avg/max/mdev = 6.515/6.525/6.535/0.010 ms\n",
      "raw_error": "",
      "structured_output": {
        "bytes": 56,
        "from": "8.8.8.8",
        "ttl": 117,
        "packets": [
          {
            "sequence": 1,
            "time_ms": 6.52,
            "status": "success"
          },
          {
            "sequence": 2,
            "time_ms": 6.54,
            "status": "success"
          }
        ],
        "errors": [],
        "statistics": {
          "packets_transmitted": 2,
          "packets_received": 2,
          "packet_loss_percent": 0.0,
          "time_ms": 1002,
          "errors": 0,
          "rtt": {
            "min": 6.515,
            "avg": 6.525,
            "max": 6.535,
            "mdev": 0.01
          }
        }
      }
    }
  },
  "curl_Simple GET request": {
    "success": true,
    "status_code": 200,
    "response_time_ms": 1686,
    "content_type": "application/json",
    "response": {
      "service": "curl",
      "process_time_ms": 1684,
      "target": "https://httpbin.org/get",
      "arguments": {
        "method": "GET",
        "headers": "",
        "data": "",
        "follow_redirects": false,
        "verbose": false,
        "insecure": false,
        "user_agent": "",
        "headers_only": false,
        "options_used": ""
      },
      "return_code": 0,
      "raw_output": "{\n  \"args\": {}, \n  \"headers\": {\n    \"Accept\": \"*/*\", \n    \"Host\": \"httpbin.org\", \n    \"User-Agent\": \"curl/8.9.1\", \n    \"X-Amzn-Trace-Id\": \"Root=1-68e0defc-5902c8fa79afd82c5a78cfee\"\n  }, \n  \"origin\": \"97.120.235.198\", \n  \"url\": \"https://httpbin.org/get\"\n}\n",
      "raw_error": "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\n100   255  100   255    0     0    152      0  0:00:01  0:00:01 --:--:--   152\n100   255  100   255    0     0    152      0  0:00:01  0:00:01 --:--:--   152\n",
      "structured_output": {
        "response_headers": {},
        "response_body": "",
        "http_status": null,
        "content_type": null,
        "content_length": null,
        "server": null,
        "location": null,
        "timing": {},
        "ssl_info": {},
        "verbose_info": []
      }
    }
  },
  "curl_Headers only request": {
    "success": true,
    "status_code": 200,
    "response_time_ms": 1760,
    "content_type": "application/json",
    "response": {
      "service": "curl",
      "process_time_ms": 1758,
      "target": "https://httpbin.org/headers",
      "arguments": {
        "method": "GET",
        "headers": "User-Agent: MCP-Test-Agent",
        "data": "",
        "follow_redirects": false,
        "verbose": false,
        "insecure": false,
        "user_agent": "",
        "headers_only": true,
        "options_used": "-I -H User-Agent: MCP-Test-Agent"
      },
      "return_code": 0,
      "raw_output": "HTTP/2 200 \ndate: Sat, 04 Oct 2025 08:46:55 GMT\ncontent-type: application/json\ncontent-length: 176\nserver: gunicorn/19.9.0\naccess-control-allow-origin: *\naccess-control-allow-credentials: true\n\n",
      "raw_error": "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\n  0   176    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\n",
      "structured_output": {
        "response_headers": {
          "date": "Sat, 04 Oct 2025 08:46:55 GMT",
          "content-type": "application/json",
          "content-length": "176",
          "server": "gunicorn/19.9.0",
          "access-control-allow-origin": "*",
          "access-control-allow-credentials": "true"
        },
        "response_body": "",
        "http_status": 200,
        "content_type": "application/json",
        "content_length": 176,
        "server": "gunicorn/19.9.0",
        "location": null,
        "timing": {},
        "ssl_info": {},
        "verbose_info": []
      }
    }
  },
  "datetime_Simple datetime request": {
    "success": true,
    "status_code": 200,
    "response_time_ms": 1,
    "content_type": "application/json",
    "response": {
      "service": "datetime",
      "process_time_ms": 0,
      "target": "system_time",
      "arguments": {
        "timezone": "local",
        "format": "",
        "utc": false
      },
      "return_code": 0,
      "raw_output": "2025-10-04T01:46:55.167916",
      "raw_error": "",
      "structured_output": {
        "iso_format": "2025-10-04T01:46:55.167916",
        "timestamp": 1759567615,
        "human_readable": "2025-10-04 01:46:55",
        "date_only": "2025-10-04",
        "time_only": "01:46:55",
        "timezone": "Local",
        "weekday": "Saturday",
        "month": "October",
        "year": 2025,
        "month_num": 10,
        "day": 4,
        "hour": 1,
        "minute": 46,
        "second": 55,
        "microsecond": 167916,
        "day_of_year": 277,
        "week_number": 40
      }
    }
  },
  "datetime_UTC with custom format": {
    "success": true,
    "status_code": 200,
    "response_time_ms": 0,
    "content_type": "application/json",
    "response": {
      "service": "datetime",
      "process_time_ms": 0,
      "target": "system_time",
      "arguments": {
        "timezone": "local",
        "format": "%Y-%m-%d %H:%M:%S",
        "utc": true
      },
      "return_code": 0,
      "raw_output": "2025-10-04T08:46:55.169078+00:00",
      "raw_error": "",
      "structured_output": {
        "iso_format": "2025-10-04T08:46:55.169078+00:00",
        "timestamp": 1759567615,
        "human_readable": "2025-10-04 08:46:55",
        "date_only": "2025-10-04",
        "time_only": "08:46:55",
        "timezone": "UTC",
        "weekday": "Saturday",
        "month": "October",
        "year": 2025,
        "month_num": 10,
        "day": 4,
        "hour": 8,
        "minute": 46,
        "second": 55,
        "microsecond": 169078,
        "day_of_year": 277,
        "week_number": 40,
        "custom_format": "2025-10-04 08:46:55"
      }
    }
  },
  "dns_DNS lookup for google.com": {
    "success": true,
    "status_code": 500,
    "response_time_ms": 1,
    "content_type": "application/json",
    "response": {
      "service": "dns",
      "process_time_ms": 0,
      "target": "google.com",
      "arguments": {
        "record_types": [
          "A",
          "MX"
        ],
        "timeout": 5
      },
      "return_code": -1,
      "raw_output": "",
      "raw_error": "'NoneType' object has no attribute 'timeout'",
      "structured_output": {}
    }
  },
  "dns_IPv4 and IPv6 lookup for github.com": {
    "success": true,
    "status_code": 500,
    "response_time_ms": 1,
    "content_type": "application/json",
    "response": {
      "service": "dns",
      "process_time_ms": 0,
      "target": "github.com",
      "arguments": {
        "record_types": [
          "A",
          "AAAA"
        ],
        "timeout": 5.0
      },
      "return_code": -1,
      "raw_output": "",
      "raw_error": "'NoneType' object has no attribute 'timeout'",
      "structured_output": {}
    }
  },
  "enum4linux_User enumeration on localhost (quick test)": {
    "success": true,
    "status_code": 200,
    "response_time_ms": 10159,
    "content_type": "application/json",
    "response": {
      "service": "enum4linux",
      "process_time_ms": 10158,
      "target": "127.0.0.1",
      "arguments": {
        "options": "-U",
        "username": "",
        "password": "",
        "timeout": 30
      },
      "return_code": 1,
      "raw_output": "Starting enum4linux v0.9.1 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Sat Oct  4 01:46:55 2025\n\n\u001b[34m =========================================( \u001b[0m\u001b[32mTarget Information\u001b[0m\u001b[34m )=========================================\n\n\u001b[0mTarget ........... 127.0.0.1\nRID Range ........ 500-550,1000-1050\nUsername ......... ''\nPassword ......... ''\nKnown Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none\n\n\n\u001b[34m =============================( \u001b[0m\u001b[32mEnumerating Workgroup/Domain on 127.0.0.1\u001b[0m\u001b[34m )=============================\n\n\u001b[0m\u001b[33m\n[E] \u001b[0m\u001b[31mCan't find workgroup/domain\n\n\u001b[0m\n\n\u001b[34m =====================================( \u001b[0m\u001b[32mSession Check on 127.0.0.1\u001b[0m\u001b[34m )=====================================\n\n\u001b[0m\u001b[33m\n[E] \u001b[0m\u001b[31mServer doesn't allow session using username '', password ''.  Aborting remainder of tests.\n\n\u001b[0m",
      "raw_error": "\"my\" variable $which_output masks earlier declaration in same scope at ./enum4linux.pl line 280.\n",
      "structured_output": {
        "target_info": {
          "hostname": null,
          "os_version": null,
          "workgroup": null,
          "domain": null
        },
        "users": [],
        "groups": [],
        "shares": [],
        "machines": [],
        "password_policy": {},
        "printer_info": [],
        "nmblookup": {},
        "errors": []
      }
    }
  },
  "whois_WHOIS lookup for google.com": {
    "success": true,
    "status_code": 200,
    "response_time_ms": 139,
    "content_type": "application/json",
    "response": {
      "service": "whois",
      "process_time_ms": 134,
      "target": "google.com",
      "arguments": {
        "options": "",
        "server": "",
        "timeout": 30
      },
      "return_code": 0,
      "raw_output": "   Domain Name: GOOGLE.COM\n   Registry Domain ID: 2138514_DOMAIN_COM-VRSN\n   Registrar WHOIS Server: whois.markmonitor.com\n   Registrar URL: http://www.markmonitor.com\n   Updated Date: 2019-09-09T15:39:04Z\n   Creation Date: 1997-09-15T04:00:00Z\n   Registry Expiry Date: 2028-09-14T04:00:00Z\n   Registrar: MarkMonitor Inc.\n   Registrar IANA ID: 292\n   Registrar Abuse Contact Email: abusecomplaints@markmonitor.com\n   Registrar Abuse Contact Phone: +1.2086851750\n   Domain Status: clientDeleteProhibited https://icann.org/epp#clientDeleteProhibited\n   Domain Status: clientTransferProhibited https://icann.org/epp#clientTransferProhibited\n   Domain Status: clientUpdateProhibited https://icann.org/epp#clientUpdateProhibited\n   Domain Status: serverDeleteProhibited https://icann.org/epp#serverDeleteProhibited\n   Domain Status: serverTransferProhibited https://icann.org/epp#serverTransferProhibited\n   Domain Status: serverUpdateProhibited https://icann.org/epp#serverUpdateProhibited\n   Name Server: NS1.GOOGLE.COM\n   Name Server: NS2.GOOGLE.COM\n   Name Server: NS3.GOOGLE.COM\n   Name Server: NS4.GOOGLE.COM\n   DNSSEC: unsigned\n   URL of the ICANN Whois Inaccuracy Complaint Form: https://www.icann.org/wicf/\n>>> Last update of whois database: 2025-10-04T08:46:45Z <<<\n\nFor more information on Whois status codes, please visit https://icann.org/epp\n\nNOTICE: The expiration date displayed in this record is the date the\nregistrar's sponsorship of the domain name registration in the registry is\ncurrently set to expire. This date does not necessarily reflect the expiration\ndate of the domain name registrant's agreement with the sponsoring\nregistrar.  Users may consult the sponsoring registrar's Whois database to\nview the registrar's reported date of expiration for this registration.\n\nTERMS OF USE: You are not authorized to access or query our Whois\ndatabase through the use of electronic processes that are high-volume and\nautomated except as reasonably necessary to register domain names or\nmodify existing registrations; the Data in VeriSign Global Registry\nServices' (\"VeriSign\") Whois database is provided by VeriSign for\ninformation purposes only, and to assist persons in obtaining information\nabout or related to a domain name registration record. VeriSign does not\nguarantee its accuracy. By submitting a Whois query, you agree to abide\nby the following terms of use: You agree that you may use this Data only\nfor lawful purposes and that under no circumstances will you use this Data\nto: (1) allow, enable, or otherwise support the transmission of mass\nunsolicited, commercial advertising or solicitations via e-mail, telephone,\nor facsimile; or (2) enable high volume, automated, electronic processes\nthat apply to VeriSign (or its computer systems). The compilation,\nrepackaging, dissemination or other use of this Data is expressly\nprohibited without the prior written consent of VeriSign. You agree not to\nuse electronic processes that are automated and high-volume to access or\nquery the Whois database except as reasonably necessary to register\ndomain names or modify existing registrations. VeriSign reserves the right\nto restrict your access to the Whois database in its sole discretion to ensure\noperational stability.  VeriSign may restrict or terminate your access to the\nWhois database for failure to abide by these terms of use. VeriSign\nreserves the right to modify these terms at any time.\n\nThe Registry database contains ONLY .COM, .NET, .EDU domains and\nRegistrars.\nDomain Name: google.com\nRegistry Domain ID: 2138514_DOMAIN_COM-VRSN\nRegistrar WHOIS Server: whois.markmonitor.com\nRegistrar URL: http://www.markmonitor.com\nUpdated Date: 2024-08-02T02:17:33+0000\nCreation Date: 1997-09-15T07:00:00+0000\nRegistrar Registration Expiration Date: 2028-09-13T07:00:00+0000\nRegistrar: MarkMonitor, Inc.\nRegistrar IANA ID: 292\nRegistrar Abuse Contact Email: abusecomplaints@markmonitor.com\nRegistrar Abuse Contact Phone: +1.2086851750\nDomain Status: clientUpdateProhibited (https://www.icann.org/epp#clientUpdateProhibited)\nDomain Status: clientTransferProhibited (https://www.icann.org/epp#clientTransferProhibited)\nDomain Status: clientDeleteProhibited (https://www.icann.org/epp#clientDeleteProhibited)\nDomain Status: serverUpdateProhibited (https://www.icann.org/epp#serverUpdateProhibited)\nDomain Status: serverTransferProhibited (https://www.icann.org/epp#serverTransferProhibited)\nDomain Status: serverDeleteProhibited (https://www.icann.org/epp#serverDeleteProhibited)\nRegistrant Organization: Google LLC\nRegistrant Country: US\nRegistrant Email: Select Request Email Form at https://domains.markmonitor.com/whois/google.com\nTech Email: Select Request Email Form at https://domains.markmonitor.com/whois/google.com\nName Server: ns2.google.com\nName Server: ns3.google.com\nName Server: ns4.google.com\nName Server: ns1.google.com\nDNSSEC: unsigned\nURL of the ICANN WHOIS Data Problem Reporting System: http://wdprs.internic.net/\n>>> Last update of WHOIS database: 2025-10-04T08:43:58+0000 <<<\n\nFor more information on WHOIS status codes, please visit:\n  https://www.icann.org/resources/pages/epp-status-codes\n\nIf you wish to contact this domain\u2019s Registrant or Technical\ncontact, and such email address is not visible above, you may do so via our web\nform, pursuant to ICANN\u2019s Temporary Specification. To verify that you are not a\nrobot, please enter your email address to receive a link to a page that\nfacilitates email communication with the relevant contact(s).\n\nWeb-based WHOIS:\n  https://domains.markmonitor.com/whois/contact/google.com\n\nIf you have a legitimate interest in viewing the non-public WHOIS details, send\nyour request and the reasons for your request to whoisrequest@markmonitor.com\nand specify the domain name in the subject line. We will review that request and\nmay ask for supporting documentation and explanation.\n\nThe data in MarkMonitor\u2019s WHOIS database is provided for information purposes,\nand to assist persons in obtaining information about or related to a domain\nname\u2019s registration record. While MarkMonitor believes the data to be accurate,\nthe data is provided \"as is\" with no guarantee or warranties regarding its\naccuracy.\n\nBy submitting a WHOIS query, you agree that you will use this data only for\nlawful purposes and that, under no circumstances will you use this data to:\n  (1) allow, enable, or otherwise support the transmission by email, telephone,\nor facsimile of mass, unsolicited, commercial advertising, or spam; or\n  (2) enable high volume, automated, or electronic processes that send queries,\ndata, or email to MarkMonitor (or its systems) or the domain name contacts (or\nits systems).\n\nMarkMonitor reserves the right to modify these terms at any time.\n\nBy submitting this query, you agree to abide by this policy.\n\nMarkMonitor Domain Management(TM)\nProtecting companies and consumers in a digital world.\n\nVisit MarkMonitor at https://www.markmonitor.com\nContact us at +1.8007459229\nIn Europe, at +44.02032062220\n--\n",
      "raw_error": "",
      "structured_output": {
        "domain": "GOOGLE.COM",
        "registrar_info": {
          "registrar": "MarkMonitor, Inc.",
          "registrar_url": "http://www.markmonitor.com",
          "abuse_email": "abusecomplaints@markmonitor.com",
          "abuse_phone": "+1.2086851750"
        },
        "registration_info": {
          "creation_date": "1997-09-15T07:00:00+0000",
          "expiration_date": "2028-09-13T07:00:00+0000",
          "updated_date": "2024-08-02T02:17:33+0000",
          "status": [
            "clientDeleteProhibited",
            "clientTransferProhibited",
            "clientUpdateProhibited",
            "serverDeleteProhibited",
            "serverTransferProhibited",
            "serverUpdateProhibited"
          ]
        },
        "registrant_info": {
          "name": null,
          "organization": "Google LLC",
          "email": "Select Request Email Form at",
          "phone": null,
          "country": "US"
        },
        "admin_contact": {
          "name": null,
          "organization": null,
          "email": null,
          "phone": null
        },
        "tech_contact": {
          "name": null,
          "organization": null,
          "email": "Select Request Email Form at",
          "phone": null
        },
        "name_servers": [
          "NS1.GOOGLE.COM",
          "NS2.GOOGLE.COM",
          "NS3.GOOGLE.COM",
          "NS4.GOOGLE.COM",
          "ns2.google.com",
          "ns3.google.com",
          "ns4.google.com",
          "ns1.google.com"
        ],
        "dnssec": "unsigned",
        "summary": {
          "domain_age_days": null,
          "days_until_expiry": null,
          "is_available": false
        },
        "errors": []
      }
    }
  },
  "wpscan_Passive scan of test site": {
    "success": true,
    "status_code": 200,
    "response_time_ms": 1336,
    "content_type": "application/json",
    "response": {
      "service": "wpscan",
      "process_time_ms": 1334,
      "target": "https://demo.testfire.net",
      "arguments": {
        "options": "passive",
        "timeout": 60,
        "force": false,
        "random_user_agent": false,
        "api_token_provided": false
      },
      "return_code": 4,
      "raw_output": "",
      "raw_error": "",
      "structured_output": {
        "target_info": {
          "target_url": "https://demo.testfire.net/",
          "effective_url": null,
          "cms_detected": false,
          "cms_version": null,
          "cms_version_status": null
        },
        "interesting_findings": [],
        "plugins": {},
        "themes": {},
        "main_theme": {},
        "users": {},
        "vulnerabilities": {
          "total_count": 0,
          "plugin_vulnerabilities": 0,
          "theme_vulnerabilities": 0,
          "core_vulnerabilities": 0
        },
        "config_backups": [],
        "db_exports": [],
        "scan_stats": {
          "requests_done": 0,
          "elapsed_seconds": 0,
          "scan_aborted": "The remote website is up, but does not seem to be running WordPress."
        },
        "errors": []
      }
    }
  },
  "httpx_Basic HTTP discovery": {
    "success": true,
    "status_code": 200,
    "response_time_ms": 10465,
    "content_type": "application/json",
    "response": {
      "service": "httpx",
      "process_time_ms": 10462,
      "target": "httpbin.org,google.com",
      "arguments": {
        "options": "basic",
        "ports": "80,443",
        "paths": "",
        "method": "GET",
        "timeout": 10,
        "threads": 50,
        "rate_limit": 150,
        "retries": 2
      },
      "return_code": 0,
      "raw_output": "https://google.com [\u001b[33m301\u001b[0m] [\u001b[35mGET\u001b[0m] [\u001b[35m220\u001b[0m] [\u001b[36m301 Moved\u001b[0m]\nhttp://google.com [\u001b[33m301\u001b[0m] [\u001b[35mGET\u001b[0m] [\u001b[35m219\u001b[0m] [\u001b[36m301 Moved\u001b[0m]\nhttp://httpbin.org:443 [\u001b[31m400\u001b[0m] [\u001b[35mGET\u001b[0m] [\u001b[35m220\u001b[0m] [\u001b[36m400 The plain HTTP request was sent to HTTPS port\u001b[0m]\n",
      "raw_error": "\n    __    __  __       _  __\n   / /_  / /_/ /_____ | |/ /\n  / __ \\/ __/ __/ __ \\|   /\n / / / / /_/ /_/ /_/ /   |\n/_/ /_/\\__/\\__/ .___/_/|_|\n             /_/\n\n\t\tprojectdiscovery.io\n\n[\u001b[34mINF\u001b[0m] Current httpx version v1.7.1 (\u001b[92mlatest\u001b[0m)\n[\u001b[93mWRN\u001b[0m] UI Dashboard is disabled, Use -dashboard option to enable\n",
      "structured_output": {
        "discovered_hosts": [],
        "statistics": {
          "total_hosts": 0,
          "responsive_hosts": 0,
          "unique_status_codes": [],
          "technologies_found": [],
          "web_servers_found": []
        },
        "hosts_by_status": {},
        "errors": [
          "JSON parsing error: Expecting value: line 1 column 1 (char 0) for line: https://google.com [\u001b[33m301\u001b[0m] [\u001b[35mGET\u001b[0m] [\u001b[35m220\u001b[0m] [\u001b[36m301 Moved\u001b[0m]",
          "JSON parsing error: Expecting value: line 1 column 1 (char 0) for line: http://google.com [\u001b[33m301\u001b[0m] [\u001b[35mGET\u001b[0m] [\u001b[35m219\u001b[0m] [\u001b[36m301 Moved\u001b[0m]",
          "JSON parsing error: Expecting value: line 1 column 1 (char 0) for line: http://httpbin.org:443 [\u001b[31m400\u001b[0m] [\u001b[35mGET\u001b[0m] [\u001b[35m220\u001b[0m] [\u001b[36m400 The plain HTTP request"
        ]
      }
    }
  },
  "nbtscan_NetBIOS scan of localhost": {
    "success": true,
    "status_code": 200,
    "response_time_ms": 2008,
    "content_type": "application/json",
    "response": {
      "service": "nbtscan",
      "process_time_ms": 2006,
      "target": "127.0.0.1",
      "arguments": {
        "options": "basic",
        "timeout": 2000,
        "verbose": false,
        "retransmits": 0,
        "use_local_port": false
      },
      "return_code": 0,
      "raw_output": "",
      "raw_error": "",
      "structured_output": {}
    }
  }
}